{"ast":null,"code":"import _regeneratorRuntime from \"/Users/YingChor/Bossjob-Frontend-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/YingChor/Bossjob-Frontend-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/YingChor/Bossjob-Frontend-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/YingChor/Bossjob-Frontend-Test/src/shared/components/JobList/JobList.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport JobItem from './JobItem';\nimport './JobList.css';\n\nvar JobList = function JobList() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      jobs = _useState2[0],\n      setJobs = _useState2[1];\n\n  useEffect(function () {\n    getJobs();\n  }, []);\n\n  var getJobs =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://search.bossjob.com/api/v1/search/job_filter?size=10&query=system\");\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              console.log('All data >>>>>', data);\n              setJobs(data.data.jobs);\n              console.log(data.data.jobs);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function getJobs() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"found-job\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"1321 jobs found\"), jobs.map(function (jobs) {\n    return React.createElement(JobItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default JobList;","map":{"version":3,"sources":["/Users/YingChor/Bossjob-Frontend-Test/src/shared/components/JobList/JobList.jsx"],"names":["React","useEffect","useState","JobItem","JobList","jobs","setJobs","getJobs","fetch","response","json","data","console","log","map"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,eAAP;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,kBACIF,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,MACbG,IADa;AAAA,MACPC,OADO;;AAGpBL,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACSC,KAAK,4EADd;;AAAA;AACRC,cAAAA,QADQ;AAAA;AAAA,qBAIKA,QAAQ,CAACC,IAAT,EAJL;;AAAA;AAIRC,cAAAA,IAJQ;AAKdC,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,IAA9B;AACAL,cAAAA,OAAO,CAACK,IAAI,CAACA,IAAL,CAAUN,IAAX,CAAP;AACAO,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACA,IAAL,CAAUN,IAAtB;;AAPc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPE,OAAO;AAAA;AAAA;AAAA,KAAb;;AAUA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGIF,IAAI,CAACS,GAAL,CAAS,UAAAT,IAAI;AAAA,WACX,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW;AAAA,GAAb,CAHJ,CADF;AAUD,CA3BD;;AA6BA,eAAeD,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport JobItem from './JobItem'\n\nimport './JobList.css'\n\nconst JobList = () => {\n  const [jobs, setJobs] = useState([])\n\n  useEffect(() => {\n    getJobs()\n  }, [])\n\n  const getJobs = async () => {\n    const response = await fetch(\n      `https://search.bossjob.com/api/v1/search/job_filter?size=10&query=system`\n    )\n    const data = await response.json()\n    console.log('All data >>>>>', data)\n    setJobs(data.data.jobs)\n    console.log(data.data.jobs)\n  }\n\n  return (\n    <div className=\"content\">\n      <div className=\"found-job\">1321 jobs found</div>\n      {\n        jobs.map(jobs => (\n          <JobItem />\n        ))\n      }\n    </div>\n  )\n}\n\nexport default JobList\n\n"]},"metadata":{},"sourceType":"module"}