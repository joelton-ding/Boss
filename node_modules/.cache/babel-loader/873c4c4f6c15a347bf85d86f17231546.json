{"ast":null,"code":"import _regeneratorRuntime from \"/Users/YingChor/Boss/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/YingChor/Boss/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/YingChor/Boss/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/YingChor/Boss/src/shared/components/JobList/JobList.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport JobItem from './JobItem'; // import JobSearch from '../JobSearch/JobSearch'\n\nimport './JobList.css';\nimport '../JobSearch/JobSearch.css';\n\nvar JobList = function JobList() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      jobs = _useState2[0],\n      setJobs = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      totals = _useState4[0],\n      setTotals = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      search = _useState6[0],\n      setSearch = _useState6[1];\n\n  var _useState7 = useState('system'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      query = _useState8[0],\n      setQuery = _useState8[1];\n\n  useEffect(function () {\n    getJobs();\n  }, [query]);\n\n  var getJobs =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://search.bossjob.com/api/v1/search/job_filter?size=20&query=\".concat(query));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              console.log('All data >>>>>', data);\n              setJobs(data.data.jobs);\n              console.log(data.data.jobs);\n              setTotals(data.data.total_num);\n              console.log(data.data.total_num);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function getJobs() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var updateSearch = function updateSearch(e) {\n    setSearch(e.target.value);\n    console.log('onchanges search >>>', search);\n  };\n\n  var getSearch = function getSearch(e) {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: getSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search for job title or company name\",\n    value: search,\n    onChange: updateSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    className: \"search-icon\",\n    src: \"https://assets.bossjob.com/website/Search.svg\",\n    alt: \"search\",\n    height: \"18px\",\n    width: \"18px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"filter-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Filter Results\")))), React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"found-job\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, totals, \" jobs found\"), jobs.map(function (job) {\n    return React.createElement(JobItem, {\n      key: job.id,\n      title: job.job_title,\n      salary_range_from: job.salary_range_from,\n      salary_range_to: job.salary_range_to,\n      job_country: job.job_country,\n      xp_lvl: job.xp_lvl,\n      degree: job.degree,\n      job_type: job.job_type,\n      company_logo: job.company_logo,\n      company_name: job.company_name,\n      updated_at: job.updated_at,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    });\n  })));\n};\n\nexport default JobList;","map":{"version":3,"sources":["/Users/YingChor/Boss/src/shared/components/JobList/JobList.jsx"],"names":["React","useEffect","useState","JobItem","JobList","jobs","setJobs","totals","setTotals","search","setSearch","query","setQuery","getJobs","fetch","response","json","data","console","log","total_num","updateSearch","e","target","value","getSearch","preventDefault","map","job","id","job_title","salary_range_from","salary_range_to","job_country","xp_lvl","degree","job_type","company_logo","company_name","updated_at"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport JobItem from './JobItem'\n// import JobSearch from '../JobSearch/JobSearch'\n\nimport './JobList.css'\nimport '../JobSearch/JobSearch.css'\n\nconst JobList = () => {\n  const [jobs, setJobs] = useState([])\n  const [totals, setTotals] = useState('')\n  const [search, setSearch] = useState('')\n  const [query, setQuery] = useState('system')\n\n  useEffect(() => {\n    getJobs()\n  }, [query])\n\n  const getJobs = async () => {\n    const response = await fetch(\n      `https://search.bossjob.com/api/v1/search/job_filter?size=20&query=${query}`\n    )\n    const data = await response.json()\n    console.log('All data >>>>>', data)\n    setJobs(data.data.jobs)\n    console.log(data.data.jobs)\n    setTotals(data.data.total_num)\n    console.log(data.data.total_num)\n  }\n\n  const updateSearch = e => {\n    setSearch(e.target.value)\n    console.log('onchanges search >>>', search)\n  }\n\n  const getSearch = e => {\n    e.preventDefault()\n    setQuery(search)\n    setSearch('')\n  }\n\n  return (\n    <div>\n      <form onSubmit={getSearch}>\n        <div className=\"container\">\n          <div className=\"search-input\">\n            <input type=\"text\" placeholder=\"Search for job title or company name\"\n              value={search}\n              onChange={updateSearch} />\n            <img className=\"search-icon\" src=\"https://assets.bossjob.com/website/Search.svg\" alt=\"search\" height=\"18px\" width=\"18px\" />\n          </div>\n          <div className=\"filter-wrapper\">\n            <button>Filter Results</button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"content\">\n        <div className=\"found-job\">{totals} jobs found</div>\n        {\n          jobs.map(job => (\n            <JobItem\n              key={job.id}\n              title={job.job_title}\n              salary_range_from={job.salary_range_from}\n              salary_range_to={job.salary_range_to}\n              job_country={job.job_country}\n              xp_lvl={job.xp_lvl}\n              degree={job.degree}\n              job_type={job.job_type}\n              company_logo={job.company_logo}\n              company_name={job.company_name}\n              updated_at={job.updated_at} />\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default JobList\n\n"]},"metadata":{},"sourceType":"module"}